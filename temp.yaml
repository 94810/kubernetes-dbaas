apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: kubernetes-dbaas-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: databaseclasses.databaseclass.dbaas.bedag.ch
spec:
  group: databaseclass.dbaas.bedag.ch
  names:
    kind: DatabaseClass
    listKind: DatabaseClassList
    plural: databaseclasses
    shortNames:
    - dbc
    singular: databaseclass
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: DatabaseClass is the Schema for the databaseclasses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseClassSpec defines the desired state of DatabaseClass
            properties:
              driver:
                type: string
              operations:
                additionalProperties:
                  description: Operation represents an operation performed on a DBMS
                    identified by name and containing a map of inputs and a map of
                    outputs.
                  properties:
                    inputs:
                      additionalProperties:
                        type: string
                      type: object
                    name:
                      type: string
                    outputs:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kubernetes-dbaas-system/kubernetes-dbaas-serving-cert
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: databases.database.dbaas.bedag.ch
spec:
  group: database.dbaas.bedag.ch
  names:
    kind: Database
    listKind: DatabaseList
    plural: databases
    shortNames:
    - db
    singular: database
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Database is the Schema for the database API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseSpec defines the desired state of Database.
            properties:
              endpoint:
                description: Endpoint associates this resource with a particular endpoint
                  (must be already configured on the operator side)
                type: string
              params:
                additionalProperties:
                  type: string
                description: Params is a map containing parameters to be mapped to
                  the database instance
                type: object
            type: object
          status:
            description: DatabaseStatus defines the observed state of Database.
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: operatorconfigs.config.dbaas.bedag.ch
spec:
  group: config.dbaas.bedag.ch
  names:
    kind: OperatorConfig
    listKind: OperatorConfigList
    plural: operatorconfigs
    singular: operatorconfig
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: OperatorConfig is the Schema for the operatorconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          cacheNamespace:
            description: "CacheNamespace if specified restricts the manager's cache
              to watch objects in the desired namespace Defaults to all namespaces
              \n Note: If a namespace is specified, controllers can still Watch for
              a cluster-scoped resource (e.g Node).  For namespaced resources the
              cache will only hold objects from the desired namespace."
            type: string
          dbms:
            description: DbmsList returns the configuration for the database endpoints.
            items:
              description: Dbms is the instance associated with a Dbms resource. It
                contains the Driver responsible for the Operations executed on Endpoints.
              properties:
                databaseClassName:
                  type: string
                endpoints:
                  items:
                    description: Endpoint represent the configuration of a DBMS endpoint
                      identified by a name.
                    properties:
                      dsn:
                        type: string
                      name:
                        type: string
                    required:
                    - dsn
                    - name
                    type: object
                  type: array
              required:
              - databaseClassName
              - endpoints
              type: object
            type: array
          gracefulShutDown:
            description: GracefulShutdownTimeout is the duration given to runnable
              to stop before the manager actually returns on stop. To disable graceful
              shutdown, set to time.Duration(0) To use graceful shutdown without timeout,
              set to a negative duration, e.G. time.Duration(-1) The graceful shutdown
              is skipped for safety reasons in case the leadere election lease is
              lost.
            type: string
          health:
            description: Health contains the controller health configuration
            properties:
              healthProbeBindAddress:
                description: HealthProbeBindAddress is the TCP address that the controller
                  should bind to for serving health probes
                type: string
              livenessEndpointName:
                description: LivenessEndpointName, defaults to "healthz"
                type: string
              readinessEndpointName:
                description: ReadinessEndpointName, defaults to "readyz"
                type: string
            type: object
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          leaderElection:
            description: LeaderElection is the LeaderElection config to be used when
              configuring the manager.Manager leader election
            properties:
              leaderElect:
                description: leaderElect enables a leader election client to gain
                  leadership before executing the main loop. Enable this when running
                  replicated components for high availability.
                type: boolean
              leaseDuration:
                description: leaseDuration is the duration that non-leader candidates
                  will wait after observing a leadership renewal until attempting
                  to acquire leadership of a led but unrenewed leader slot. This is
                  effectively the maximum duration that a leader can be stopped before
                  it is replaced by another candidate. This is only applicable if
                  leader election is enabled.
                type: string
              renewDeadline:
                description: renewDeadline is the interval between attempts by the
                  acting master to renew a leadership slot before it stops leading.
                  This must be less than or equal to the lease duration. This is only
                  applicable if leader election is enabled.
                type: string
              resourceLock:
                description: resourceLock indicates the resource object type that
                  will be used to lock during leader election cycles.
                type: string
              resourceName:
                description: resourceName indicates the name of resource object that
                  will be used to lock during leader election cycles.
                type: string
              resourceNamespace:
                description: resourceName indicates the namespace of resource object
                  that will be used to lock during leader election cycles.
                type: string
              retryPeriod:
                description: retryPeriod is the duration the clients should wait between
                  attempting acquisition and renewal of a leadership. This is only
                  applicable if leader election is enabled.
                type: string
            required:
            - leaderElect
            - leaseDuration
            - renewDeadline
            - resourceLock
            - resourceName
            - resourceNamespace
            - retryPeriod
            type: object
          metadata:
            type: object
          metrics:
            description: Metrics contains thw controller metrics configuration
            properties:
              bindAddress:
                description: BindAddress is the TCP address that the controller should
                  bind to for serving prometheus metrics. It can be set to "0" to
                  disable the metrics serving.
                type: string
            type: object
          syncPeriod:
            description: SyncPeriod determines the minimum frequency at which watched
              resources are reconciled. A lower period will correct entropy more quickly,
              but reduce responsiveness to change if there are many watched resources.
              Change this value only if you know what you are doing. Defaults to 10
              hours if unset. there will a 10 percent jitter between the SyncPeriod
              of all controllers so that all controllers will not send list requests
              simultaneously.
            type: string
          webhook:
            description: Webhook contains the controllers webhook configuration
            properties:
              certDir:
                description: CertDir is the directory that contains the server key
                  and certificate. if not set, webhook server would look up the server
                  key and certificate in {TempDir}/k8s-webhook-server/serving-certs.
                  The server key and certificate must be named tls.key and tls.crt,
                  respectively.
                type: string
              host:
                description: Host is the hostname that the webhook server binds to.
                  It is used to set webhook.Server.Host.
                type: string
              port:
                description: Port is the port that the webhook server serves at. It
                  is used to set webhook.Server.Port.
                type: integer
            type: object
        required:
        - dbms
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kubernetes-dbaas-system/kubernetes-dbaas-serving-cert
  creationTimestamp: null
  name: kubernetes-dbaas-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: kubernetes-dbaas-webhook-service
      namespace: kubernetes-dbaas-system
      path: /mutate-database-dbaas-bedag-ch-v1-database
  failurePolicy: Fail
  name: mdatabase.kb.io
  rules:
  - apiGroups:
    - database.dbaas.bedag.ch
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - databases
  sideEffects: None
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubernetes-dbaas-controller-manager
  namespace: kubernetes-dbaas-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubernetes-dbaas-leader-election-role
  namespace: kubernetes-dbaas-system
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kubernetes-dbaas-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - list
  - update
  - watch
- apiGroups:
  - database.dbaas.bedag.ch
  resources:
  - databases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - database.dbaas.bedag.ch
  resources:
  - databases/finalizers
  verbs:
  - update
- apiGroups:
  - database.dbaas.bedag.ch
  resources:
  - databases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - databaseclass.dbaas.bedag.ch
  resources:
  - databaseclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubernetes-dbaas-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubernetes-dbaas-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubernetes-dbaas-leader-election-rolebinding
  namespace: kubernetes-dbaas-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dbaas-leader-election-role
subjects:
- kind: ServiceAccount
  name: kubernetes-dbaas-controller-manager
  namespace: kubernetes-dbaas-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dbaas-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-dbaas-manager-role
subjects:
- kind: ServiceAccount
  name: kubernetes-dbaas-controller-manager
  namespace: kubernetes-dbaas-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dbaas-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-dbaas-proxy-role
subjects:
- kind: ServiceAccount
  name: kubernetes-dbaas-controller-manager
  namespace: kubernetes-dbaas-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: config.dbaas.bedag.ch/v1
    kind: OperatorConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: bfa62c96.dbaas.bedag.ch
    dbms:
      - databaseClassName: "databaseclass-sample"
        endpoints:
          - name: "us-sqlserver-test"
            dsn: "sqlserver://sa:Password&1@192.168.49.1:1433"
kind: ConfigMap
metadata:
  name: kubernetes-dbaas-manager-config
  namespace: kubernetes-dbaas-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: kubernetes-dbaas-controller-manager-metrics-service
  namespace: kubernetes-dbaas-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-dbaas-webhook-service
  namespace: kubernetes-dbaas-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: kubernetes-dbaas-controller-manager
  namespace: kubernetes-dbaas-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --load-config=/controller_manager_config.yaml
        - --debug=true
        command:
        - /manager
        image: docker.io/criscola/kubernetes-dbaas:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /controller_manager_config.yaml
          name: manager-config
          subPath: controller_manager_config.yaml
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kubernetes-dbaas-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - configMap:
          name: kubernetes-dbaas-manager-config
        name: manager-config
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kubernetes-dbaas-serving-cert
  namespace: kubernetes-dbaas-system
spec:
  dnsNames:
  - kubernetes-dbaas-webhook-service.kubernetes-dbaas-system.svc
  - kubernetes-dbaas-webhook-service.kubernetes-dbaas-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: kubernetes-dbaas-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kubernetes-dbaas-selfsigned-issuer
  namespace: kubernetes-dbaas-system
spec:
  selfSigned: {}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    control-plane: controller-manager
    release: prometheus
  name: kubernetes-dbaas-kubernetes-dbaas-controller-manager-metrics-monitor
  namespace: kubernetes-dbaas-system
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  selector:
    matchLabels:
      control-plane: controller-manager
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kubernetes-dbaas-system/kubernetes-dbaas-serving-cert
  creationTimestamp: null
  name: kubernetes-dbaas-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: kubernetes-dbaas-webhook-service
      namespace: kubernetes-dbaas-system
      path: /validate-database-dbaas-bedag-ch-v1-database
  failurePolicy: Fail
  name: vdatabase.kb.io
  rules:
  - apiGroups:
    - database.dbaas.bedag.ch
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - databases
  sideEffects: None
