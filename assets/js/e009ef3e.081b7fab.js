"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[60],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,f=u["".concat(l,".").concat(m)]||u[m]||c[m]||i;return a?n.createElement(f,o(o({ref:t},d),{},{components:a})):n.createElement(f,o({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1339:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),o=["components"],s={sidebar_position:3},l="DatabaseClass",p={unversionedId:"operator-configuration/databaseclasses",id:"operator-configuration/databaseclasses",isDocsHomePage:!1,title:"DatabaseClass",description:"Format",source:"@site/docs/operator-configuration/databaseclasses.md",sourceDirName:"operator-configuration",slug:"/operator-configuration/databaseclasses",permalink:"/kubernetes-dbaas/docs/operator-configuration/databaseclasses",editUrl:"https://github.com/bedag/kubernetes-dbaas/edit/main/website/docs/operator-configuration/databaseclasses.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Main configuration",permalink:"/kubernetes-dbaas/docs/operator-configuration/main-configuration"},next:{title:"Credential rotation",permalink:"/kubernetes-dbaas/docs/operator-configuration/credential-rotation"}},d=[{value:"Format",id:"format",children:[]},{value:"Templating",id:"templating",children:[]},{value:"Caveats",id:"caveats",children:[{value:"MySQL/MariaDB",id:"mysqlmariadb",children:[]}]}],c={toc:d};function u(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"databaseclass"},"DatabaseClass"),(0,i.kt)("h2",{id:"format"},"Format"),(0,i.kt)("p",null,"DatabaseClass is the resource describing database operations."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"driver")," expects a string declaring the driver to be used to execute database operations. It can be either ",(0,i.kt)("inlineCode",{parentName:"li"},"postgres"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"sqlserver"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"mysql")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"mariadb"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"operations")," accepts 3 keys: ",(0,i.kt)("inlineCode",{parentName:"li"},"create"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"delete")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"rotate"),". Each operation expects the same keys.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name")," expects a string specifying the name of the stored procedure as it is in the relative DBMS endpoint. The Operator will call it when the\nrelative operation is triggered."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"inputs")," expects an arbitrary map of values. Each key is the name of the parameter as specified in the stored procedure, while the value is\nthe value supplied to it. See ",(0,i.kt)("a",{parentName:"li",href:"/docs/operator-configuration/databaseclasses#templating"},"Templating")," to learn more."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"secretFormat")," expects an arbitrary map of values. Each key is the name of the key as specified in the Secret resource created during the ",(0,i.kt)("inlineCode",{parentName:"li"},"create")," operation,\nwhile the value is the value returned by the ",(0,i.kt)("inlineCode",{parentName:"li"},"create")," stored procedure. You can find the values from the ",(0,i.kt)("inlineCode",{parentName:"li"},"create")," operation by using the ",(0,i.kt)("inlineCode",{parentName:"li"},".Result")," top-level key.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: databaseclass.dbaas.bedag.ch/v1\nkind: DatabaseClass\nmetadata:\n  name: databaseclass-sample-psql\nspec:\n  driver: "postgres"\n  operations:\n    create:\n      name: "sp_create_db_rowset_eav"\n      inputs:\n        k8sName: "{{ .Metadata.name }}"\n    delete:\n      name: "sp_delete"\n      inputs:\n        k8sName: "{{ .Metadata.name }}"\n    rotate:\n      name: "sp_rotate"\n      inputs:\n        k8sName: "{{ .Metadata.name }}"\n  secretFormat:\n    username: "{{ .Result.username }}"\n    password: "{{ .Result.password }}"\n    port: "{{ .Result.port }}"\n    dbName: "{{ .Result.dbName }}"\n    server: "{{ .Result.fqdn }}"\n    dsn: "psql://{{ .Result.username }}:{{ .Result.password }}@{{ .Result.fqdn }}:{{ .Result.port }}/{{ .Result.dbName }}"\n')),(0,i.kt)("p",null,"DatabaseClasses are cluster-wide resources and do not belong to any namespace. They can be recalled on the command line\nusing the shorthand ",(0,i.kt)("inlineCode",{parentName:"p"},"dbc")," instead of supplying the whole name."),(0,i.kt)("h2",{id:"templating"},"Templating"),(0,i.kt)("p",null,"DatabaseClasses support ",(0,i.kt)("a",{parentName:"p",href:"https://golang.org/pkg/text/template/"},"Go templates")," for operation inputs. Users can supply an\narbitrary number of key-value pairs which will be mapped to the relative key as specified in the DatabaseClass\nresponsible for their  Database instance. See ",(0,i.kt)("a",{parentName:"p",href:"/docs/usage"},"Usage"),"."),(0,i.kt)("p",null,"The first key starts with a dot and has the first letter capitalized. There are two sources of values:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".Metadata")," maps values from the ",(0,i.kt)("inlineCode",{parentName:"li"},"metadata")," field of the Database resource."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".Params")," maps values from the ",(0,i.kt)("inlineCode",{parentName:"li"},"spec.params")," field of the Database resource.")),(0,i.kt)("p",null,"For example, if an end-user has specified ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.params.department: devops"),", you could map it to the create stored procedure\nlike that: ",(0,i.kt)("inlineCode",{parentName:"p"},'spec.operations.create.inputs.department: "{{ .Parameters.department }}"')," and it will\nbe rendered ultimately as following: ",(0,i.kt)("inlineCode",{parentName:"p"},"department: 'devops'"),"."),(0,i.kt)("p",null,"Of course, you can hard-code your own values on a per-DatabaseClass basis, or if you're using the ","[Helm deployment]","(#Helm deployment) option,\nrender values through the Helm chart."),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If a key was specified, but a value was not found during rendering, the resource will generate an error.\nEvery ",(0,i.kt)("inlineCode",{parentName:"p"},".Params.<key>")," and ",(0,i.kt)("inlineCode",{parentName:"p"},".Metadata.<key>")," specified in the Operator configuration must be defined.\nTo define optional parameters, explicitly ask end-users to provide an empty string as value."))),(0,i.kt)("h2",{id:"caveats"},"Caveats"),(0,i.kt)("h3",{id:"mysqlmariadb"},"MySQL/MariaDB"),(0,i.kt)("p",null,"MySQL/MariaDB do not support supplying input parameters by name, only by position. Thus, in this case, the order of\nparameters matter."),(0,i.kt)("p",null,"To work around this, DatabaseClasses specifying a MySQL/MariaDB driver must be adapted with a specific configuration.\nKeys of ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.operations.<operation>.inputs")," must be integers describing their position relative to the other parameters,\ne.g. ",(0,i.kt)("inlineCode",{parentName:"p"},'"0"')," becomes the first parameter to be supplied and ",(0,i.kt)("inlineCode",{parentName:"p"},'"1"')," becomes the second."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'[..]\n  driver: "mariadb"\n  operations: \n    create:\n      name: "sp_create_db_rowset_eav"\n      inputs:\n        "0": "{{ .Metadata.name }}"\n        "1": "{{ .Params.department }}"\n[..]\n')))}u.isMDXComponent=!0}}]);