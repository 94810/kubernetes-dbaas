"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[816],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(n),h=o,d=p["".concat(u,".").concat(h)]||p[h]||m[h]||i;return n?r.createElement(d,a(a({ref:t},c),{},{components:n})):r.createElement(d,a({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5742:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={sidebar_position:1},u="How to contribute",l={unversionedId:"contributing/how-to-contribute",id:"contributing/how-to-contribute",isDocsHomePage:!1,title:"How to contribute",description:"Thank you for taking your valuable time to go through the contributor documentation.",source:"@site/docs/contributing/how-to-contribute.md",sourceDirName:"contributing",slug:"/contributing/how-to-contribute",permalink:"/kubernetes-dbaas/docs/contributing/how-to-contribute",editUrl:"https://github.com/bedag/kubernetes-dbaas/edit/main/website/docs/contributing/how-to-contribute.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/kubernetes-dbaas/docs/usage"},next:{title:"Branching standard",permalink:"/kubernetes-dbaas/docs/contributing/branching-standard"}},c=[{value:"Pull request process",id:"pull-request-process",children:[]},{value:"Commits",id:"commits",children:[{value:"Commit signature verification",id:"commit-signature-verification",children:[]},{value:"Sign off your changes",id:"sign-off-your-changes",children:[]}]},{value:"Pull requests requirements",id:"pull-requests-requirements",children:[{value:"Versioning",id:"versioning",children:[]},{value:"Review",id:"review",children:[]},{value:"Testing",id:"testing",children:[]}]},{value:"Documentation",id:"documentation",children:[{value:"Website",id:"website",children:[]},{value:"Helm Chart",id:"helm-chart",children:[]},{value:"Godocs",id:"godocs",children:[]}]},{value:"Helm Chart notes",id:"helm-chart-notes",children:[]}],m={toc:c};function p(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-to-contribute"},"How to contribute"),(0,i.kt)("p",null,"Thank you for taking your valuable time to go through the contributor documentation. "),(0,i.kt)("p",null,"We'd love to review your PRs. Please submit a GitHub issue describing your enhancement or bugfix before\nstarting to work on your proposed changes. Make sure to read the following instructions as well."),(0,i.kt)("h2",{id:"pull-request-process"},"Pull request process"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Fork the project repository, develop and test your changes on that fork"),(0,i.kt)("li",{parentName:"ol"},"Commit changes"),(0,i.kt)("li",{parentName:"ol"},"Submit a PR from your fork to this project.")),(0,i.kt)("h2",{id:"commits"},"Commits"),(0,i.kt)("p",null,"Please have meaningful and well-formed commit messages. ",(0,i.kt)("a",{parentName:"p",href:"https://chris.beams.io/posts/git-commit/"},"This article"),'\nsummarizes nicely the interpretation of "meaningful" and "well-formed".'),(0,i.kt)("h3",{id:"commit-signature-verification"},"Commit signature verification"),(0,i.kt)("p",null,"Each commit signature ",(0,i.kt)("strong",{parentName:"p"},"must be signed")," (using the uppercase ",(0,i.kt)("inlineCode",{parentName:"p"},"-S")," option of ",(0,i.kt)("inlineCode",{parentName:"p"},"git commit"),") and ",(0,i.kt)("strong",{parentName:"p"},"verified")," (by uploading your public\nkey to your own GitHub account). "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/about-commit-signature-verification"},"About commit signature verification")),(0,i.kt)("li",{parentName:"ul"},"You can read ",(0,i.kt)("a",{parentName:"li",href:"https://mikegerwitz.com/2012/05/a-git-horror-story-repository-integrity-with-signed-commits"},"this excellent article"),"\nfor an overview of git commit signing (if you have read it, we are using option #3).")),(0,i.kt)("h3",{id:"sign-off-your-changes"},"Sign off your changes"),(0,i.kt)("p",null,"The Developer Certificate of Origin (DCO) is a lightweight way for contributors to certify that they wrote or otherwise\nhave the right to submit the code they are contributing to the project. Here is the full text of the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bedag/kubernetes-dbaas/blob/main/DCO"},"DCO"),". "),(0,i.kt)("p",null,"Contributors ",(0,i.kt)("strong",{parentName:"p"},"must sign-off")," each commit by adding a Signed-off-by line to commit messages (using the lowercase ",(0,i.kt)("inlineCode",{parentName:"p"},"-s")," option of ",(0,i.kt)("inlineCode",{parentName:"p"},"git commit"),")."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Signed-off-by: Random J Developer <random@developer.example.org>\nSee git help commit:\n\n-s, --signoff\n    Add Signed-off-by line by the committer at the end of the commit log\n    message. The meaning of a signoff depends on the project, but it typically\n    certifies that committer has the rights to submit this work under the same\n    license and agrees to a Developer Certificate of Origin (see\n    http://developercertificate.org/ for more information).\n")),(0,i.kt)("h2",{id:"pull-requests-requirements"},"Pull requests requirements"),(0,i.kt)("p",null,"All submissions, including submissions by project members, require review. We use GitHub pull requests for this purpose. Consult ",(0,i.kt)("a",{parentName:"p",href:"https://help.github.com/articles/about-pull-requests/"},"GitHub Help")," for more information on using pull requests. See the above stated requirements for PR on this project."),(0,i.kt)("p",null,"Your PR has to fulfill the following points, to be considered:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Workflows must pass (see ",(0,i.kt)("a",{parentName:"li",href:"/docs/contributing/ci"},"CI pipeline"),")."),(0,i.kt)("li",{parentName:"ul"},"All commits correspond to the requirements (see ",(0,i.kt)("a",{parentName:"li",href:"/docs/contributing/how-to-contribute"},"Commits"),").")),(0,i.kt)("h3",{id:"versioning"},"Versioning"),(0,i.kt)("p",null,"This project follows the ",(0,i.kt)("a",{parentName:"p",href:"https://semver.org/"},"semver standard")," for everything. Versions are bumped by maintainers.\nIf your changes contain breaking changes, please explicitly state it in your GitHub issue."),(0,i.kt)("h3",{id:"review"},"Review"),(0,i.kt)("p",null,"If your PR does not have any activity after certain days, feel free to comment a reminder. Your PR requires approval\nto be mergeable."),(0,i.kt)("h3",{id:"testing"},"Testing"),(0,i.kt)("p",null,"Your PR should enclose updated or new test cases. See ",(0,i.kt)("a",{parentName:"p",href:"/docs/contributing/testing"},"Testing"),". "),(0,i.kt)("h2",{id:"documentation"},"Documentation"),(0,i.kt)("h3",{id:"website"},"Website"),(0,i.kt)("p",null,"The documentation is done using ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/facebook/docusaurus"},"Docusaurus"),". Download Docusaurus,\nrun ",(0,i.kt)("inlineCode",{parentName:"p"},"npm run start")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"/website")," directory and start modifying the Markdown\nfiles contained in ",(0,i.kt)("inlineCode",{parentName:"p"},"/website/docs"),". Refer directly to the official Docusaurus documentation to learn more. "),(0,i.kt)("h3",{id:"helm-chart"},"Helm Chart"),(0,i.kt)("p",null,"Any change to the Helm Chart's documentation requires you to run ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/norwoodj/helm-docs"},"helm-docs"),",\nwhich will autogenerate a README.md for the Chart."),(0,i.kt)("h3",{id:"godocs"},"Godocs"),(0,i.kt)("p",null,"Any change to the codebase requires you to update the relative godocs as well."),(0,i.kt)("h2",{id:"helm-chart-notes"},"Helm Chart notes"),(0,i.kt)("p",null,"TODO: Work in progress"))}p.isMDXComponent=!0}}]);