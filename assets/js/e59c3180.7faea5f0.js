"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[175],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),u=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),h=r,m=p["".concat(s,".").concat(h)]||p[h]||d[h]||a;return n?i.createElement(m,o(o({ref:t},c),{},{components:n})):i.createElement(m,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4687:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),o=["components"],l={},s="CI pipeline",u={unversionedId:"contributing/ci",id:"contributing/ci",isDocsHomePage:!1,title:"CI pipeline",description:"Overview",source:"@site/docs/contributing/ci.md",sourceDirName:"contributing",slug:"/contributing/ci",permalink:"/kubernetes-dbaas/docs/contributing/ci",editUrl:"https://github.com/bedag/kubernetes-dbaas/edit/main/website/docs/contributing/ci.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Testing",permalink:"/kubernetes-dbaas/docs/contributing/testing"},next:{title:"Legals",permalink:"/kubernetes-dbaas/docs/legals"}},c=[{value:"Overview",id:"overview",children:[]},{value:"CodeQL",id:"codeql",children:[]},{value:"Test suite",id:"test-suite",children:[]},{value:"Docker image build &amp; release",id:"docker-image-build--release",children:[{value:"Version tags",id:"version-tags",children:[]}]},{value:"Docs generation",id:"docs-generation",children:[]},{value:"Helm Chart linting",id:"helm-chart-linting",children:[]},{value:"Protected branches and status checks",id:"protected-branches-and-status-checks",children:[]},{value:"Additional information",id:"additional-information",children:[]}],d={toc:c};function p(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ci-pipeline"},"CI pipeline"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"The CI pipeline is set up using GitHub Actions and Workflows. Workflows\ncan be found under the ",(0,a.kt)("inlineCode",{parentName:"p"},".github/workflows")," directory."),(0,a.kt)("p",null,"There are currently 4 different workflows defined:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"CodeQL"),(0,a.kt)("li",{parentName:"ul"},"Test suite"),(0,a.kt)("li",{parentName:"ul"},"Docker image build & release"),(0,a.kt)("li",{parentName:"ul"},"Docs generation "),(0,a.kt)("li",{parentName:"ul"},"Helm Chart linting")),(0,a.kt)("h2",{id:"codeql"},"CodeQL"),(0,a.kt)("p",null,"This workflow will run whenever a push or pull request is submitted to the main branch, except when there are\ncommits involving files contained exclusively in ",(0,a.kt)("inlineCode",{parentName:"p"},"website/"),"."),(0,a.kt)("p",null,'This is the default code scanning workflow scaffolded by GitHub. Detected security vulnerabilities in the codebase are\nlogged into the "Security" tab of the repository.'),(0,a.kt)("h2",{id:"test-suite"},"Test suite"),(0,a.kt)("p",null,"This workflow will run whenever a push or pull request is submitted to the main branch, except when there are commits\ninvolving files contained exclusively in ",(0,a.kt)("inlineCode",{parentName:"p"},"website/"),"."),(0,a.kt)("p",null,"The full test suite including integration and e2e tests is executed. If any test case fails, the workflow will fail."),(0,a.kt)("p",null,"This workflow automatically pushes the updated coverage report to the repo."),(0,a.kt)("h2",{id:"docker-image-build--release"},"Docker image build & release"),(0,a.kt)("p",null,"This workflow will run whenever a push is submitted to the main branch or when a new release is published."),(0,a.kt)("p",null,"This workflow will build & push the Docker image defined in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Dockerfile"),". If the build succeeded, the Trivy\nvulnerability scanner will scan the codebase and the Docker image in search of vulnerabilities."),(0,a.kt)("h3",{id:"version-tags"},"Version tags"),(0,a.kt)("p",null,"The versioning convention follow semantic versioning. When either a push to the main branch or a release is submitted,\nthe image tagged with ",(0,a.kt)("inlineCode",{parentName:"p"},"latest")," is updated."),(0,a.kt)("p",null,"The tags pushed in case of a release are: ",(0,a.kt)("inlineCode",{parentName:"p"},"{{major}}"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"{{major}}.{{minor}}"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"{{major}}.{{minor}}.{{patch}}"),", so\nthat users can decide to receive updates of minor or minor+patch versions without having to bump version manually."),(0,a.kt)("h2",{id:"docs-generation"},"Docs generation"),(0,a.kt)("p",null,"This workflow will run whenever a push or pull request is submitted to the main branch. Commit pushes\nto the main branch will trigger this workflow only when at least one file is modified in the ",(0,a.kt)("inlineCode",{parentName:"p"},"website/")," directory.\nPull requests trigger a job checking whether a build is successful, it does not trigger deployment to GitHub pages."),(0,a.kt)("p",null,"We are using Docusaurus to generate the documentation."),(0,a.kt)("h2",{id:"helm-chart-linting"},"Helm Chart linting"),(0,a.kt)("p",null,"This workflow will run whenever a push or pull request is submitted to the main branch involving at least\none file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"charts/")," directory."),(0,a.kt)("p",null,"This workflow will simply run ",(0,a.kt)("inlineCode",{parentName:"p"},"ct lint")," (Helm Chart linter) to check for trivial errors."),(0,a.kt)("h2",{id:"protected-branches-and-status-checks"},"Protected branches and status checks"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"stable")," branch is a protected branch:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Only a linear commit history is allowed."),(0,a.kt)("li",{parentName:"ul"},"All commits must be signed and verified."),(0,a.kt)("li",{parentName:"ul"},"All workflows must pass, and the main branch must be up to date before merging.")),(0,a.kt)("h2",{id:"additional-information"},"Additional information"),(0,a.kt)("p",null,"You can also run the workflows locally by setting up ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/nektos/act"},"act")," on your machine."))}p.isMDXComponent=!0}}]);